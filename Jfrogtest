  pipeline {
 agent {node {label 'master'}}
 environment {
  dotnet = "${tool 'MSBuild15_Path'}"
 }
 stages {
  stage('Checkout') {
   steps {
    checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '21dcef66-4390-4b26-8345-bdce1adc6a5d', url: 'https://github.com/rohithks/dotnet-project.git']]])
   }
  }
  stage('Load Properties') {
  steps {
    load "helloworldjenkins.properties"
  }
  }
  
  stage('Artifactory Upload') {
   steps {
      bat "echo ${env.Nupkg_Path}"
      script { 
	  def buildVersion = currentBuild.number
          def server = Artifactory.server 'Jfrog_Artifactory'
          def buildInfo = Artifactory.newBuildInfo()
          buildInfo.name = "${BUILD_INFO_NAME}"
          buildInfo.number = "${BUILD_INFO_NUMBER}"
          server.publishBuildInfo buildInfo
                def uploadSpec = """{
                    "files": [
		    {
                       "pattern":"${env.Nupkg_Path}/sample.3.0.0.nupkg",
                       "target": "Nuget-repo-test/${JIRA_STORY_ID}/"
                    }
		    ]
                 }"""
                  server.upload(uploadSpec) 
		  //def buildInfo1 = server.download downloadSpec
                  def buildInfo2 = server.upload uploadSpec
                  //buildInfo1.append buildInfo2
                  server.publishBuildInfo buildInfo2
                  
	 }
      }
    }
  stage('Update JIRA Ticket') {
  steps {
          //jiraIssueSelector(issueSelector: [$class: 'DefaultIssueSelector'])
	   # Look at IssueInput class for more information.
    def testIssue1 = [fields: [ project: [id: '10000'],
                                summary: 'New JIRA Created from Jenkins.',
                                description: 'New JIRA Created from Jenkins.',
                                issuetype: [id: '3']]]


    def testIssue2 = [fields: [ project: [id: '10000'],
                                summary: 'New JIRA Created from Jenkins.',
                                description: 'New JIRA Created from Jenkins.',
                                issuetype: [id: '3']]]

    def testIssues = [issueUpdates: [testIssue1, testIssue2]]

    response = jiraNewIssues issues: testIssues

    echo response.successful.toString()
    echo response.data.toString()
 
     }
     }
    }
  }
  
	
